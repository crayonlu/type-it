name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add server to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to server
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          set -e
          
          echo "🚀 开始部署 type-it..."
          
          # 设置代理环境变量（如果需要）
          export http_proxy=http://127.0.0.1:7890
          export https_proxy=http://127.0.0.1:7890
          export HTTP_PROXY=http://127.0.0.1:7890
          export HTTPS_PROXY=http://127.0.0.1:7890
          
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          echo "📦 拉取最新镜像..."
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
          echo "🛑 停止旧容器..."
          docker stop type-it 2>/dev/null || true
          docker rm type-it 2>/dev/null || true
          
          echo "▶️ 启动新容器..."
          docker run -d \
            --name type-it \
            --restart unless-stopped \
            -p 3000:80 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          
          sleep 10
          
          if docker ps | grep -q type-it; then
            echo "✅ 部署成功！"
          else
            echo "❌ 部署失败！"
            docker logs type-it
            exit 1
          fi
          
          docker image prune -a -f --filter "until=24h" || true
        EOF

    - name: Health Check
      run: |
        echo "🔍 健康检查..."
        sleep 30
